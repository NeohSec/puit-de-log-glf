services:
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./DATA/loki:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - lokinet

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    volumes:
      - ./DATA/grafana:/var/lib/grafana
    labels:
      nginx.reverse_proxy: "{{upstreams}}"
    depends_on:
      - loki
      - renderer
    networks:
      - lokinet

  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: grafana-image-renderer
    expose:
      - "8081"
    environment:
      ENABLE_METRICS: "true"
    networks:
      - lokinet

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:latest
    container_name: fluent-bit
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./DATA/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - lokinet

  nginx:
    image: nginx
    container_name: reverse_proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./reverseproxy/conf.d/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./reverseproxy/certs:/etc/nginx/certs:ro
    depends_on:
      - grafana
    networks:
      - lokinet

networks:
  lokinet:
    driver: bridge
